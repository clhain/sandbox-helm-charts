{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Values.ouathSecret.secretName) | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
{{- $cookieSecret := (get $secretData "cookie-secret") | default (randAlphaNum 32 | b64enc | substr 0 32) }}
{{- $clientSecret := (get $secretData "oidc.clientSecret") | default (randAlphaNum 32 | b64enc | substr 0 32) }}
{{- $clientId := (get $secretData "oidc.clientId") | default (randAlphaNum 32 | b64enc | substr 0 32) }}
{{- $adminPass := (get $secretData "admin-password") | default (randAlphaNum 32 | b64enc | substr 0 32) }}

{{- if .Values.ouathSecret.enable }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ouathSecret.secretName | required (printf "No ouathSecret.secretName specified") }}
  labels:
    app.kubernetes.io/part-of: argocd
stringData:
  oidc.clientId: "{{ if .Values.oidcClientID }}{{ .Values.oidcClientID }}{{ else }}{{ $clientId | b64dec }}{{ end }}"
  oidc.clientSecret: "{{ if .Values.oidcClientSecret }}{{ .Values.oidcClientSecret }}{{ else }}{{ $clientSecret | b64dec }}{{ end }}"
  cookie-secret: "{{ if .Values.cookieSecret }}{{ .Values.cookieSecret }}{{ else }}{{ $cookieSecret | b64dec }}{{ end }}"
  admin-password: "{{ if .Values.adminPass }}{{ .Values.adminPass }}{{ else }}{{ $adminPass | b64dec }}{{ end }}"
{{- end }}

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sandbox-apps
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  project: default
  source:
    repoURL: {{ .Values.appsHelmSourceURL }}
    path: {{ .Values.appsHelmSourcePath }}
    targetRevision: {{ .Values.appsHelmSourceTargetRevision }}
    helm:
      parameters:
        - name: clusterDomain
          value: "{{ .Values.clusterDomain }}"
        - name: clusterIngressIP
          value: "{{ .Values.clusterIngressIP }}"
        - name: clusterTLSInsecure
          value: "{{ .Values.clusterTLSInsecure }}"
        - name: clusterLocalAuth
          value: "{{ .Values.clusterLocalAuth }}"
        - name: oidcPermittedEmailDomains
          value: "{{ .Values.oidcPermittedEmailDomains }}"
        - name: oidcIssuerURL
          value: "{{ if .Values.oidcIssuerURL }}{{ .Values.oidcIssuerURL }}{{ else }}{{ if .Values.clusterTLSInsecure }}http://{{ else }}https://{{ end }}dex.{{.Values.clusterDomain}}/dex{{ end }}"
        - name: letsEncryptContactEmail
          value: "{{ .Values.letsEncryptContactEmail }}"
        {{- if .Values.paramOverrides }}
        {{- range $k,$v := .Values.paramOverrides }}
        - name: {{ $k }}
          value: {{ include "render-value" ( dict "value" $v "context" $) | quote}}
        {{- end }}
        {{- end }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
