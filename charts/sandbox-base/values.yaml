# The source repo containing the sandbox-apps helm charts.
appsHelmSourceURL: https://github.com/clhain/sandbox-helm-charts.git
# The path to the sandbox-apps helm chart.
appsHelmSourcePath: charts/sandbox-apps
# The target revision of the sandbox-apps helm chart repo to pull from.
appsHelmSourceTargetRevision: HEAD
# The default sandbox-apps application branch / tag to pull from
appsSourceTargetRevision: HEAD

# clusterDomain is the domain under which all resources are deployed. e.g. example.com
clusterDomain:
# clusterIngressIP is the IP address which is to be assigned to the nginx ingress controller.
clusterIngressIP:
# oidcClientID is the OIDC Client's ID to be used with oauth2 proxy.
oidcClientID:
# oidcClientSecret is the OIDC Client's Secret to be used with oauth2 proxy.
oidcClientSecret:
# oidcIssuerURL is the OIDC Issuer URL to be used with oauth2 proxy.
oidcIssuerURL:
# oidcPermittedEmailDomains is the set of email domains allowed to access resources behind the oauth2 proxy.
oidcPermittedEmailDomains: "*"
# letsEncryptContactEmail is the email address to use when registering let's encrypt certs.
letsEncryptContactEmail:

# Whether to deploy a secret value containing Oauth Client secret settings.
argoOuathSecret:
  # Enable the secret resource.
  enable: true
  # The Oauth2 Client ID to add to the secret resource.
  clientID: "{{ .Values.oidcClientID }}"
  # The Oauth2 Client Secret to add to the resource.
  clientSecret: "{{ .Values.oidcClientSecret }}"
  # The name of the Oauth2 secret resource to deploy.
  secretName: oauth-secret

# Parameter overrides to pass to the sandbox-apps helm chart.
paramOverrides:
  clusterDomain: "{{ .Values.clusterDomain }}"
  clusterIngressIP: "{{ .Values.clusterIngressIP }}"
  oidcClientID: "{{ .Values.oidcClientID }}"
  oidcClientSecret: "{{ .Values.oidcClientSecret }}"
  oidcPermittedEmailDomains: "{{ .Values.oidcPermittedEmailDomains }}"
  oidcIssuerURL: "{{ .Values.oidcIssuerURL }}"
  letsEncryptContactEmail: "{{ .Values.letsEncryptContactEmail }}"
  default.app.source.targetRevision: "{{ .Values.appsSourceTargetRevision }}"


# Setting to pass to the public Argo CD Helm Charts
# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml
argo-cd:
  crds:
    # Required because argo-cd helm handles crds as templates rather than in crds directory.
    install: false
  server:
    # Set the default policy for logged in GUI users to readonly.
    rbacConfig:
      policy.default: role:readonly
    config:
      resource.customizations.health.argoproj.io_Application: |-
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
    # Example values for Azure AD
    # config:
    #   oidc.config: |
    #     name: AzureAD
    #     issuer: {{ YOUR_OIDC_ISSUER_URL }}
    #     clientID: $oauth-secret:oidc.clientId
    #     clientSecret: $oauth-secret:oidc.clientSecret
    #     requestedIDTokenClaims:
    #       groups:
    #         essential: true
    #     requestedScopes:
    #       - openid
    #       - profile
    #       - email
